From e4590b59e88886501b09b635aa5558200da6ed68 Mon Sep 17 00:00:00 2001
From: Mohamad Noor Alim Hussin <mnalim@efinixinc.com>
Date: Wed, 12 Jan 2022 09:26:42 +0800
Subject: [PATCH 5/5] drivers: update API of vexriscv spi driver

Some API have been renamed. Update for this driver as well.

Signed-off-by: Mohamad Noor Alim Hussin <mnalim@efinixinc.com>
---
 drivers/spi/vexriscv_spi.c | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/spi/vexriscv_spi.c b/drivers/spi/vexriscv_spi.c
index ade6ca7889..cf4a5cdae9 100644
--- a/drivers/spi/vexriscv_spi.c
+++ b/drivers/spi/vexriscv_spi.c
@@ -106,9 +106,9 @@ static int vexriscv_spi_claim_bus(struct udevice *dev)
 {
 	debug("!!!%s:%d\n",__func__,__LINE__);
 	struct udevice *bus = dev->parent;
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(bus);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(bus);
 	struct spi_slave *priv = dev_get_parent_priv(dev);
-	struct dm_spi_slave_platdata *slave = dev_get_parent_platdata(priv->dev);
+	struct dm_spi_slave_plat *slave = dev_get_parent_plat(priv->dev);
 	debug("!!!%s:%d %d %d\n",__func__,__LINE__,plat->cs,slave->cs);
 	//if (plat->cs != -1)
 	//	return -EINVAL;
@@ -120,7 +120,7 @@ static int vexriscv_spi_release_bus(struct udevice *dev)
 {
 	debug("!!!%s:%d\n",__func__,__LINE__);
 	struct udevice *bus = dev->parent;
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(bus);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(bus);
 	plat->cs = -1;
 	return 0;
 }
@@ -128,9 +128,9 @@ static int vexriscv_spi_release_bus(struct udevice *dev)
 static int vexriscv_spi_ofdata_to_platdata(struct udevice *dev)
 {
 	debug("!!!%s:%d\n",__func__,__LINE__);
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(dev);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(dev);
 
-	plat->regs = (void *)dev_read_addr(dev);
+	plat->regs = dev_read_addr(dev);
 	if (!plat->regs) {
 		printf("%s: could not map device address\n", __func__);
 		return -EINVAL;
@@ -156,7 +156,7 @@ static int vexriscv_spi_bind(struct udevice *dev)
 static int vexriscv_spi_probe(struct udevice *dev)
 {
 	debug("!!!%s:%d\n",__func__,__LINE__);
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(dev);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(dev);
 
 #if CONFIG_IS_ENABLED(OF_CONTROL) && !CONFIG_IS_ENABLED(OF_PLATDATA)
 	plat->cs = -1;
@@ -183,7 +183,7 @@ static int vexriscv_spi_xfer(struct udevice *dev, unsigned int bitlen,
 {
 	//debug("!!!%s:%d\n",__func__,__LINE__);
 	struct udevice *bus = dev->parent;
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(bus);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(bus);
 	const u8 *tx_ptr = dout;
 	u8 *rx_ptr = din;
 	u32 len = (bitlen + 7) / 8;
@@ -242,7 +242,7 @@ static int vexriscv_spi_xfer(struct udevice *dev, unsigned int bitlen,
 static int vexriscv_spi_set_speed(struct udevice *dev, uint speed)
 {
 	debug("!!!%s:%d %x\n",__func__,__LINE__,speed);
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(dev);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(dev);
 	speed = min(plat->max_hz, speed);
 	u32 clk_divider = (plat->clock/speed/2)-1;
 	writel(clk_divider, &plat->regs->clk_div);
@@ -252,7 +252,7 @@ static int vexriscv_spi_set_speed(struct udevice *dev, uint speed)
 static int vexriscv_spi_set_mode(struct udevice *dev, uint mode)
 {
 	debug("!!!%s:%d %x\n",__func__,__LINE__,mode);
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(dev);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(dev);
 	u32 config = 0;
 
 	plat->mode = mode;
@@ -280,7 +280,7 @@ static int vexriscv_cs_info(struct udevice *dev, uint cs,
 			  struct spi_cs_info *info)
 {
 	debug("!!!%s:%d\n",__func__,__LINE__);
-	struct vexriscv_spi_platdata *plat = dev_get_platdata(dev);
+	struct vexriscv_spi_platdata *plat = dev_get_plat(dev);
 
 	if (cs < plat->num_cs)
 		return 0;
@@ -311,8 +311,8 @@ U_BOOT_DRIVER(vexriscv_spi) = {
 	.id	= UCLASS_SPI,
 #if CONFIG_IS_ENABLED(OF_CONTROL) && !CONFIG_IS_ENABLED(OF_PLATDATA)
 	.of_match = vexriscv_spi_ids,
-	.ofdata_to_platdata = vexriscv_spi_ofdata_to_platdata,
-	.platdata_auto_alloc_size	= sizeof(struct vexriscv_spi_platdata),
+	.of_to_plat = vexriscv_spi_ofdata_to_platdata,
+	.plat_auto	= sizeof(struct vexriscv_spi_platdata),
 #else
 	.bind = vexriscv_spi_bind,
 #endif /* OF_CONTROL && !OF_PLATDATA */
-- 
2.17.1

